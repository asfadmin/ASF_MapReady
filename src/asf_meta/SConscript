Import("globalenv")
localenv = globalenv.Clone()

localenv.AppendUnique(CPPPATH = [
        "#include",
        "#src/asf",
        "#src/libasf_proj",
        ])

localenv.ParseConfig("pkg-config --cflags --libs libgeotiff")
localenv.ParseConfig("pkg-config --cflags --libs libxml-2.0")

localenv.AppendUnique(YACCFLAGS = ["-y", "-d", "-p meta_yy"])
localenv.AppendUnique(LEXFLAGS = ["-Pmeta_yy", "-s", "-t"])

sources = [
    "allocbuf.c",
    "c_calcor.c",
    "c_dkcre.c",
    "c_dkdel.c",
    "c_dkfree.c",
    "c_dkresv.c",
    "c_dkrspac.c",
    "c_errmsg.c",
    "c_getbdr.c",
    "c_getddr.c",
    "c_getsys.c",
    "c_gettyp.c",
    "c_intbdr.c",
    "c_intddr.c",
    "c_low2up.c",
    "c_lsclos.c",
    "c_lsmknm.c",
    "c_lsopen.c",
    "c_lsread.c",
    "c_lsrepl.c",
    "c_lsstat.c",
    "c_lswrit.c",
    "c_ptio.c",
    "c_ptopen.c",
    "c_putbdr.c",
    "c_putddr.c",
    "c_pxconv.c",
    "c_pxcopy.c",
    "c_pxfill.c",
    "c_pxswap.c",
    "c_pxsys.c",
    "c_rotcor.c",
    "c_rtcoef.c",
    "c_sysset.c",
    "c_up2low.c",
    "convInt.c",
    "doopen.c",
    "lasIO.c",
    "packed_deg.c",
    "squeeze.c",
    "ardop_params.c",
    "c_degdms.c",
    "c_prostr.c",
    "cal_params.c",
    "ceos_io.c",
    "code_ceos.c",
    "coniFetch.c",
    "dateUtil.c",
    "longdate.c",
    "earth_radius2datum.c",
    "err_die.c",
    "fixed2gei.c",
    "frame_calc.c",
    "gei2fixed.c",
    "getLatLong.c",
    "getLoc.c",
    "get_ceos.c",
    "get_ceos_names.c",
    "get_stf_names.c",
    "heading.c",
    "interp_stVec.c",
    "ioLine.c",
    "latLon2timeSlant.c",
    "line_header.c",
    "lzFetch.c",
    "xml_util.c",
    "meta_check.c",
    "meta_complex2polar.c",
    "meta_copy.c",
    "meta_create.c",
    "meta_geotiff.c",
    "meta_get.c",
    "meta_get_geo.c",
    "meta_get_ifm.c",
    "meta_get_util.c",
    "meta_init.c",
    "meta_init_ardop.c",
    "meta_init_ceos.c",
    "meta_init_stVec.c",
    "meta_is_valid.c",
    "meta_project.c",
    "meta2ddr.c",
    "meta2envi.c",
    "meta2esri.c",
    "meta2airsar.c",
    "meta2gamma.c",
    "meta2vexcel_plain.c",
    "meta2alos_mosaic.c",
    "meta2radarsat.c",
    "meta2terrasar.c",
    "meta2uavsar.c",
    "meta2smap.c",
    "meta_read.c",
    "meta_write.c",
    "orbital_state_vector.c",
    "meta_write_sprocket.c",
    "meta_set_no_data.c",
    "parse_options.c",
    "proj2meta.c",
    "propagate.c",
    "readSubset.c",
    "set_era.c",
    "slantRange2groundPixel.c",
    "unpacked_deg.c",
    "utc2gha.c",
    "util3d.c",
    "yaw2doppler.c",
    "xpix_ypix.c",
    "pp_corrected_vals.c",
    "read_proj_file.c",
    "is_map_projected.c",
    "band_util.c",
    "workreport.c",
    "distortions.c",
    "y.tab.c",
    "meta2iso.c",
    "iso_init.c",
    "iso_write.c",
    "iso_read.c",
    ]

# run the parser generator and lexer
localenv.CFile("y.tab.c", "metadata_parser.y")
sources += localenv.CFile("metadata_lexer.c", "metadata_lexer.l")

libs = localenv.SharedLibrary("asf_meta", sources)

globalenv.Install(globalenv["inst_dirs"]["libs"], libs)
