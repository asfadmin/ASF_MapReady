Import("env")
env = env.Clone()

env.AppendUnique(CPPPATH = [
        "#include/",
        "#src/asf_meta/",
        "#src/asf/",
        "#src/libasf_proj/",
        "#src/libasf_raster/",
        "/usr/include/libshp",
        ])

env.ParseConfig("pkg-config --cflags --libs libgeotiff")
env.ParseConfig("pkg-config --cflags --libs glib-2.0")

libs = env.SharedLibrary("libasf_sar", [
        "gr2sr.c",
        "sr2gr.c",
        "reskew_dem.c",
        "deskew_dem.c",
        "deskew.c",
        "create_dem_grid.c",
        "poly.c",
        "fit_poly.c",
        "fetcher.c",
        "remap_poly.c",
        "mfd.c",
        "to_sr.c",
        "refine_offset.c",
        "interp_dem_holes.c",
        "find_band.c",
        "classify.c",
        "polarimetry.c",
        "farcorr.c",
        "calibrate.c",
        "calc_number_looks.c",
        "point_target_analysis.c",
        "c2p.c",
        ])

products = {"libs": libs}

# run the unit test, and set its dependencies
test_program = None
test_result = env.UnitTest("test.semaphore", test_program)
for product in products.values():
    Depends(test_result, product)

Return("products")
